# -*- coding: utf-8 -*-
"""TowerOfHanoi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11P4l-m8qURSR-QOUeeRzmtp2txvzSq6J
"""

'''

1. ill use stack to represent the rods of the tower
2. Ill create a function that will take in the move and check if the move is possible
3. If all the disk are located in C
4. Then the program exits

'''
#create a tower class
class Tower(object):
  def __init__(self, listRods):
    self.listRods = listRods #initialize a dictionary that will contain a list


  #make a move
  def makeMove(self, move, toRod):
    for rod, disk in self.listRods:
      if len(self.listRods[rod]) != 3:
        return True




  #Create a checker function
  def isValid(self):
    '''
    Create recursion, continue to create patterns until all disk are properly placed in rod C

    '''
    pass



  #Display Rods
  def displayRods(self):
    for i in self.listRods:
      print(self.listRods.get(i))


#Create a stack that will be passed on Tower Class
createStack = {"source" : ["1", "2", "3"], "middle" : [], "goal" : []}
stack = Tower(createStack)
stack.makeMove()